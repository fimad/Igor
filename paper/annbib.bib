%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Return-Oriented Programming
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Original paper
@inproceedings{rop_geo,
  title={The geometry of innocent flesh on the bone: Return-into-libc without
  function calls (on the x86)},
  author={Shacham, H.},
  booktitle={Proceedings of the 14th ACM conference on Computer and
  communications security},
  pages={552--561},
  year={2007},
  organization={ACM}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Polymorphism
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@INPROCEEDINGS{polyunpack, 
  author={Royal, P. and Halpin, M. and Dagon, D. and Edmonds, R. and Wenke Lee}, 
  booktitle={Computer Security Applications Conference, 2006. ACSAC '06. 22nd
    Annual}, title={PolyUnpack: Automating the Hidden-Code Extraction of
      Unpack-Executing Malware}, 
  year={2006}, 
  month={dec. }, 
  volume={}, 
  number={}, 
  pages={289 -300}, 
  keywords={}, 
  doi={10.1109/ACSAC.2006.38}, 
  ISSN={1063-9527},
}
@article{polyfunc,
    author = {Jacob, Grégoire and Filiol,Eric and Debar, Hervé}
  , title = {Functional polymorphic engines: formalisation, implementation and use cases}
  , journal = {Journal in Computer Virology}
  , volume = {5}
  , number = {3}
  , pages = {247--261}
  , year = {2009}
  , annotate = "
      Presents theoretical foundations rooted in compiler theory for generating multiple semantically equivalent variations of a program. 
      Theoretically, a functional polymorphic engine parses a set of abstract ``behaviours'' and given a predefined attribute grammar, non-deterministically expands the behaviours into concrete operations.
      The prototype implementation is fairly limited, defining 4 behaviours, and a set of handwritten assembly building blocks corresponding to each behaviour.
      \par
      This paper suggests the relevance of non-deterministic compilers to the generation of metamorphic and polymorphic code. 
    "
}

@inproceedings{mimimorph,
  author = {Wu, Zhenyu and Gianvecchio, Steven and Xie, Mengjun and Wang, Haining},
  title = {Mimimorphism: a new approach to binary code obfuscation},
  booktitle = {Proceedings of the 17th ACM conference on Computer and communications security},
  series = {CCS '10},
  year = {2010},
  location = {Chicago, Illinois, USA},
  pages = {536--546},
  publisher = {ACM},
  address = {New York, NY, USA},
  annotate = "
      Presents a new method of binary obfuscation, mimimorphism, that can thwart both static and dynamic analysis.
      The process involves altering statistical properties of the target binary to match those of a benign program.
      The result is a malicious program that has benign appearing opcode frequencies and sequences, that also exhibits known benign syscall traces.
      \par
      The techniques employed in the paper for preserving the semantic properties of the target program while incorporating statistical properties of benign programs may prove useful in the automatic generation of semantically equivalent building blocks for use in functional polymorphic engines.
    "
} 

@ARTICLE{drm_paper, 
  author={Dube, T.E. and Birrer, B.D. and Raines, R.A. and Baldwin, R.O. and Mullins, B.E. and Bennington, R.W. and Reuter, C.E.}, 
  journal={Security Privacy, IEEE},
  title={Hindering Reverse Engineering: Thinking Outside the Box}, 
  year={2008}, 
  month={March-April }, 
  volume={6}, 
  number={2}, 
  pages={58 -65}, 
  annotate = "
      Surveys common approaches to breaking DRM and copy protection mechanisms and software.
      Proposes that incorporating metamorphic techniques inspired by malware may result in more robust protection schemes.
      Suggests that work on improving metamorphic techniques may have legitimate applications under DRM and copy protection.
    "
}

@incollection {transform_survey,
  author = {Cesare, Silvio and Xiang, Yang and Cesare, Silvio and Xiang, Yang},
  title = {Program Transformations and Obfuscations},
  booktitle = {Software Similarity and Classification},
  series = {SpringerBriefs in Computer Science},
  publisher = {Springer London},
  pages = {17-28},
  year = {2012},
  annotate = "
      A brief survey of various code transformations and obfuscation techniques.
      Useful in providing a starting point for building more complex code transformations,
      of particular use will be transformations that alter or obscure the call flow graph.
    "
}

@ARTICLE{npcomplete, 
  author={Spinellis, D.}, 
  journal={Information Theory, IEEE Transactions on},
  title={Reliable identification of bounded-length viruses is NP-complete}, 
  year={2003}, 
  month={jan}, 
  volume={49}, 
  number={1}, 
  pages={ 280 - 284}, 
  annotate = "
      A formal proof showing that classifying metamorphic variants of a virus is NP-complete.
      Shows that pairing a possible mutation with a known variant is equivalent to solving an $N$-term boolean formula which is known to be NP-complete.
      This proof motivates the study of metamorphic variants and may provide guidance as to the type of transformations that result in NP-completeness.
    "
}

@article{hmm_detect,
  author = {Stamp, Mark and Wong, Wing},
  title = {Hunting for metamorphic engines},
  journal = {Journal in Computer Virology},
  volume = {2},
  number = {3},
  pages = {211-229},
  month = {December},
  year = {2006},
  URL = {http://www.truststc.org/pubs/237.html},
  annotate = "
      Presents a model using HMM's that can reliably detect metamorphic variants of a program.
      Even highly metamorphic variants, like those produced by the NGVCK virus generator, can be detected due to their dissimilarity to benign programs.
      Conclude that successful metamorphic engines must while producing highly variant versions, must also produce variants that share statistical properties with normal programs.
    "
}


@article {hmm_evade,
  author = {Lin, Da and Stamp, Mark},
  affiliation = {Cisco Systems, Inc., San Jose, CA, USA},
  title = {Hunting for undetectable metamorphic viruses},
  journal = {Journal in Computer Virology},
  publisher = {Springer Paris},
  pages = {201-214},
  volume = {7},
  issue = {3},
  year = {2011},
  annotate = "
      Presents a method for generating metamorphic variants that can evade the system presented in \cite{hmm_detect}.
      The method described in the paper suggests that simply copying subroutines from known benign programs may sufficient to evade statistical static analysis.
    "
}

@INPROCEEDINGS{histogram, 
  author={Rad, Babak Bashari and Masrom, Maslin and Ibrahim, Suahimi}, 
  booktitle={e-Learning and e-Technologies in Education (ICEEE), 2012 International Conference on},
  title={Opcodes histogram for classifying metamorphic portable executables malware}, 
  year={2012}, 
  month={sept.}, 
  volume={}, 
  number={}, 
  pages={209 -213}, 
  annotate = "
      Presents an implementation of an opcode histogram based malware classifier.
      Using real world metamorphic engines shows that even given the high degree of dissimilarity in opcode sequences between metamorphic variations, they typically have a similar distribution of opcode frequencies.  
      Suggests that a robust metamorphic engine would generate variants with substantial differences in opcode frequencies.
    "
}

@article {chisquared,
  author = {Toderici, Annie and Stamp , Mark},
  affiliation = {Department of Computer Science, San Jose State University, San Jose, CA, USA},
  title = {Chi-squared distance and metamorphic virus detection},
  journal = {Journal in Computer Virology},
  publisher = {Springer Paris},
  pages = {1-14},
  year ={ 2012},
  annotate = "
    Proposes a modification to the HMM based system first presented in \cite{hmm_detect} that is robust to the metamorphic techniques presented in \cite{hmm_evade}.
    The new system combines the HMM classifier with one based on Chi-squared distance to create a hybrid system that is able to detect malware with large contiguous segments of benign code interspersed throughout it.
  "
}

@inproceedings{simile,
    author = {Beaucamps, Philippe}
  , title = {Advanced Polymorphic Techniques}
  , booktitle = {World Academy of Science, Engineering And Technology}
  , year = {2007}
  , month = {November}
  , volume = {25}
  , annotate = "
      A case study of the then most advanced metamorphic virus to date, MetaPHOR.
      MetaPHOR implements several complex metamorphic transformations including modifying its memory access profile, code permutation and instruction modification.
      The analysis of the techniques used in MetaPHOR will be useful as inspiration and starting points when investigating functional polymorphic transformations.
    "
}

@inproceedings{controlflow,
  author = {Wang, Chenxi and Hill, Jonathan and Knight, John C. and Davidson, Jack W.},
  booktitle = {DSN},
  pages = {193-202},
  publisher = {IEEE Computer Society},
  title = {Protection of Software-Based Survivability Mechanisms.},
  year = 2001,
  annotate = "
      Presents a method of control flow obfuscation by flattening the basic block graph flow graph.
      The method involves replacing direct branching between basic blocks with data-dependent branches through the use of a dispatching switch statement.
      The authors also show that the analysis of such an obfuscated program is NP-hard.
      \par
      The dispatcher based control flow shown in this paper along with being difficult to analyze may provide a flexible framework for building more complex metamorphic control flow transformations.
    "
}

@INPROCEEDINGS{mimicry,
  author = {David Wagner},
  title = {Mimicry Attacks on Host-Based Intrusion Detection Systems},
  booktitle = {In Proceedings of the 9th ACM Conference on Computer and Communications Security},
  year = {2002},
  pages = {255--264},
  publisher = {ACM Press},
  annotate = "
      The paper describes mimicry attacks which can be used to bypass detection by anomaly based intrusion detection systems.
      The attacks described in the paper involve interspersing ``no-op'' syscalls between malicious ones.
      This paper presents an early foundation for work in \cite{mimimorph} and suggests that the noise provided by ``no-op'' syscalls may be sufficient in evading syscall based detection systems.
    "
}


@inproceedings{api_calls,
  author = {Sami, Ashkan and Yadegari, Babak and Rahimi, Hossein and Peiravian, Naser and Hashemi, Sattar and Hamze, Ali},
  title = {Malware detection based on mining API calls},
  booktitle = {Proceedings of the 2010 ACM Symposium on Applied Computing},
  series = {SAC '10},
  year = {2010},
  pages = {1020--1025},
  publisher = {ACM},
  address = {New York, NY, USA},
  annotate = "
      Presents a method of detecting malware based on mining their API calls, similar to the IDS systems described in \cite{mimicry}.
      Suggests that effective metamorphic programs need to alter how they interact with the host system along with how their appearance. 
      Techniques like those presented in \cite{mimimorph}, \cite{mimcry} and \cite{hmm_evade} are likely to be useful in evading such detection schemes.
    "
}

@inproceedings{cond_obf,
    title={Impeding malware analysis using conditional code obfuscation}
  , author={Sharif, M. and Lanzi, A. and Giffin, J. and Lee, W.}
  , booktitle={Network and Distributed System Security (NDSS)}
  , year={2008}
  , annotate = "
      Presents a novel approach for obfuscating conditional code by encrypting the code segment with a key derived from the corresponding condition.
     Defeats static analysis of the program and multipath exploration because the code is only revealed at runtime and only when the corresponding condition is fulfilled.
     Combined with /cite{controlflow}, it may provide a mechanism for disguising the call flow graph of a program along with preventing static analysis.
    "
}

@article {anon_evade,
   author = {Ma, Weiqin and Duan, Pu and Liu, Sanmin and Gu, Guofei and Liu, Jyh-Charn},
   affiliation = {Department of Computer Science and Engineering, Texas A&M University, College Station, TX 77843-3112, USA},
   title = {Shadow attacks: automatically evading system-call-behavior based malware detection},
   journal = {Journal in Computer Virology},
   publisher = {Springer Paris},
   pages = {1-13},
   volume = {8},
   issue = {1},
   year = {2012},
   annotate = "
      Describes a class of evasion techniques called shadow attacks which make use of several ``shadow'' process that alone look benign, but operating collectively result in the execution of malicious behaviour.
      The authors develop a prototype system that modifies the compilation pipeline to automatically generate shadowed programs from their normal source code.
      Nondeterministically generating shadowed variants of a program will likely result in many variants whose constituent processes all exhibit different syscall traces and control flow graphs.
     "
}

@inproceedings{franken,
  title={Frankenstein: Stitching Malware from Benign Binaries},
  author={Mohan, V. and Hamlen, K.W.},
  booktitle={Proceedings of the 6th USENIX conference on Offensive Technologies},
  pages={8--8},
  year={2012},
  organization={USENIX Association},
  annotate = "
      Return-oriented programming, describes a technique for stitching together shellcode from sequences of instructions ending in a return statement that appear in the host program.
      This paper borrows ideas from recent advances in return-oriented programming and applies them to metamorphism whereby new variants of a program are created by harvesting gadgets from known benign files.
      The resulting binaries are therefore unlikely to contain any opcode sequences that would result in detection by static analysis.
      \par
      Harvesting instruction sequences from benign programs may provide a mechanism for automatically aggregating semantic building blocks for a functionally polymorphic engine.
    "
}

@ARTICLE{aleph,
  AUTHOR = {{Aleph One}},
  JOURNAL = {Phrack},
  MONTH = {November},
  NUMBER = {49},
  TITLE = {Smashing The Stack For Fun And Profit},
  URL = {http://www.phrack.org/issues.html?issue=49&id=14},
  VOLUME = {7},
  YEAR = {1996}
}

@article{stat_model,
    title={A statistical model for undecidable viral detection},
    author={Filiol, Eric and Josse, S{\'e}bastien},
    journal={Journal in Computer Virology},
    volume={3},
    number={2},
    pages={65--74},
    year={2007},
    publisher={Springer}
}
@inproceedings{towards_lcs,
    title={Towards Efficient Analysis for Malware in the Wild},
    author={Iwamura, Makoto and Itoh, Mitsutaka and Muraoka, Yoichi},
    booktitle={Communications (ICC), 2011 IEEE International Conference
    on},
    pages={1--6},
    year={2011},
    organization={IEEE}
}

@inproceedings{cfg_lcs,
    title={Static cfg analyzer for metamorphic malware code},
    author={Vinod, P and Laxmi, Vijay and Gaur, Manoj Singh and Kumar, GVSS
    and Chundawat, Yadvendra S},
    booktitle={Proceedings of the 2nd international conference on Security
    of information and networks},
    pages={225--228},
    year={2009},
    organization={ACM}
}

@inproceedings{fileprints,
    title={Fileprints: Identifying file types by n-gram analysis},
    author={Li, Wei-Jen and Wang, Ke and Stolfo, Salvatore J and Herzog,
    Benjamin},
    booktitle={Information Assurance Workshop, 2005. IAW'05. Proceedings
    from the Sixth Annual IEEE SMC},
    pages={64--71},
    year={2005},
    organization={IEEE}
}
